document.addEventListener('DOMContentLoaded', () => {
  // --- –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫ ---
  const menuItems = document.querySelectorAll('.support-menu .menu-item');
  const tabContents = document.querySelectorAll('.tab-content');

  menuItems.forEach(item => {
    item.addEventListener('click', () => {
      const targetTab = item.dataset.tab;

      // –ê–∫—Ç–∏–≤–Ω—ã–π –ø—É–Ω–∫—Ç –º–µ–Ω—é
      menuItems.forEach(i => i.classList.remove('active'));
      item.classList.add('active');

      // –ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω—ã–π —Ç–∞–±
      tabContents.forEach(content => {
        content.classList.toggle('active', content.id === targetTab);
      });
    });
  });

  // --- –ò–ò —á–∞—Ç ---
  const chatForm = document.getElementById('chatForm');
  const chatInput = document.getElementById('chatInput');
  const chatMessages = document.getElementById('chatMessages');

  // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ò–ò
  const AI_CONFIG = {
    // –ó–¥–µ—Å—å –Ω—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –≤–∞—à API –∫–ª—é—á (–ª—É—á—à–µ –ø–æ–ª—É—á–∞—Ç—å —Å —Å–µ—Ä–≤–µ—Ä–∞)
    apiKey: 'YOUR_API_KEY_HERE', 
    // –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–∞–∑–Ω—ã–µ API: OpenAI, Claude, Gemini –∏ —Ç.–¥.
    apiUrl: 'https://api.openai.com/v1/chat/completions',
    model: 'gpt-3.5-turbo',
    // –ö–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –ò–ò - —á—Ç–æ –æ–Ω –¥–æ–ª–∂–µ–Ω –∑–Ω–∞—Ç—å –æ –º–∞–≥–∞–∑–∏–Ω–µ
    systemPrompt: `
      –¢—ã - –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç —Å–ª—É–∂–±—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –º–∞–≥–∞–∑–∏–Ω–∞ –∞–≤—Ç–æ–∑–∞–ø—á–∞—Å—Ç–µ–π "Lime Details".
      
      –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–∞–≥–∞–∑–∏–Ω–µ:
      - –ü—Ä–æ–¥–∞–µ–º –∞–≤—Ç–æ–∑–∞–ø—á–∞—Å—Ç–∏, –º–∞—Å–ª–∞, —à–∏–Ω—ã, –¥–∏—Å–∫–∏, –∞–≤—Ç–æ—ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫—É
      - –†–∞–±–æ—Ç–∞–µ–º –ü–Ω-–í—Å —Å 10:00 –¥–æ 20:00
      - –¢–µ–ª–µ—Ñ–æ–Ω: +375 (29) 111-22-33
      - –î–æ—Å—Ç–∞–≤–∫–∞: 2-7 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π
      - –û–ø–ª–∞—Ç–∞: –∫–∞—Ä—Ç–æ–π, –Ω–∞–ª–∏—á–Ω—ã–º–∏ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏, —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–µ –∫–æ—à–µ–ª—å–∫–∏
      - –í–æ–∑–≤—Ä–∞—Ç —Ç–æ–≤–∞—Ä–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ 14 –¥–Ω–µ–π
      - –ü–æ–∏—Å–∫ –∑–∞–ø—á–∞—Å—Ç–µ–π –ø–æ VIN –∏–ª–∏ –º–∞—Ä–∫–µ –∞–≤—Ç–æ
      
      –¢—ã –¥–æ–ª–∂–µ–Ω:
      - –û—Ç–≤–µ—á–∞—Ç—å –¥—Ä—É–∂–µ–ª—é–±–Ω–æ –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ
      - –ü–æ–º–æ–≥–∞—Ç—å —Å –≤—ã–±–æ—Ä–æ–º –∑–∞–ø—á–∞—Å—Ç–µ–π
      - –ö–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ –∑–∞–∫–∞–∑–∞–º –∏ –¥–æ—Å—Ç–∞–≤–∫–µ
      - –†–µ—à–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—ã –∫–ª–∏–µ–Ω—Ç–æ–≤
      - –ï—Å–ª–∏ –Ω–µ –∑–Ω–∞–µ—à—å –æ—Ç–≤–µ—Ç, –ø—Ä–µ–¥–ª–æ–∂–∏ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º
      - –û—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ –∏ –ø–æ –¥–µ–ª—É
      - –ò—Å–ø–æ–ª—å–∑—É–π emoji –¥–ª—è –¥—Ä—É–∂–µ–ª—é–±–Ω–æ—Å—Ç–∏ üòä
    `
  };

  // –ò—Å—Ç–æ—Ä–∏—è —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
  let conversationHistory = [
    {
      role: "system",
      content: AI_CONFIG.systemPrompt
    },
    {
      role: "assistant", 
      content: "–ü—Ä–∏–≤–µ—Ç! –Ø –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç Lime Details. –ö–∞–∫ –º–æ–≥—É –ø–æ–º–æ—á—å? üòä"
    }
  ];

  // –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ –∫ –ò–ò
  async function sendToAI(userMessage) {
    try {
      // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∏—Å—Ç–æ—Ä–∏—é
      conversationHistory.push({
        role: "user",
        content: userMessage
      });

      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
      showTypingIndicator();

      const response = await fetch(AI_CONFIG.apiUrl, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${AI_CONFIG.apiKey}`
        },
        body: JSON.stringify({
          model: AI_CONFIG.model,
          messages: conversationHistory,
          max_tokens: 500,
          temperature: 0.7
        })
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const data = await response.json();
      const aiResponse = data.choices[0].message.content;

      // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ò–ò –≤ –∏—Å—Ç–æ—Ä–∏—é
      conversationHistory.push({
        role: "assistant",
        content: aiResponse
      });

      return aiResponse;

    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ –ò–ò:', error);
      return getFallbackResponse(userMessage);
    }
  }

  // –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–µ—á–∞—Ç–∏
  function showTypingIndicator() {
    const typingDiv = document.createElement('div');
    typingDiv.classList.add('message', 'bot-message', 'typing-indicator');
    typingDiv.innerHTML = `
      <span class="typing-dots">
        <span>.</span><span>.</span><span>.</span>
      </span>
      –ü–µ—á–∞—Ç–∞—é...
    `;
    typingDiv.id = 'typing-indicator';
    chatMessages.appendChild(typingDiv);
    chatMessages.scrollTop = chatMessages.scrollHeight;
  }

  // –£–±—Ä–∞—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–µ—á–∞—Ç–∏
  function hideTypingIndicator() {
    const typingIndicator = document.getElementById('typing-indicator');
    if (typingIndicator) {
      typingIndicator.remove();
    }
  }

  // –†–µ–∑–µ—Ä–≤–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –µ—Å–ª–∏ –ò–ò –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
  function getFallbackResponse(userMessage) {
    const message = userMessage.toLowerCase();
    
    // –ü—Ä–æ—Å—Ç—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è –±–∞–∑–æ–≤—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
    if (message.includes('–∑–∞–∫–∞–∑') || message.includes('–¥–æ—Å—Ç–∞–≤–∫–∞')) {
      return '–ü–æ –≤–æ–ø—Ä–æ—Å–∞–º –∑–∞–∫–∞–∑–æ–≤ –∏ –¥–æ—Å—Ç–∞–≤–∫–∏ –∑–≤–æ–Ω–∏—Ç–µ +375 (29) 111-22-33. –î–æ—Å—Ç–∞–≤–∫–∞ –∑–∞–Ω–∏–º–∞–µ—Ç 2-7 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π üì¶';
    }
    
    if (message.includes('–æ–ø–ª–∞—Ç–∞') || message.includes('–ø–ª–∞—Ç–∏—Ç—å')) {
      return '–ü—Ä–∏–Ω–∏–º–∞–µ–º –∫–∞—Ä—Ç—ã, –Ω–∞–ª–∏—á–Ω—ã–µ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–µ –∫–æ—à–µ–ª—å–∫–∏ üí≥';
    }
    
    if (message.includes('–≤–æ–∑–≤—Ä–∞—Ç') || message.includes('–æ–±–º–µ–Ω')) {
      return '–í–æ–∑–≤—Ä–∞—Ç —Ç–æ–≤–∞—Ä–∞ –≤–æ–∑–º–æ–∂–µ–Ω –≤ —Ç–µ—á–µ–Ω–∏–µ 14 –¥–Ω–µ–π. –°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è üîÑ';
    }
    
    if (message.includes('–∑–∞–ø—á–∞—Å—Ç') || message.includes('–¥–µ—Ç–∞–ª—å')) {
      return '–î–ª—è –ø–æ–¥–±–æ—Ä–∞ –∑–∞–ø—á–∞—Å—Ç–µ–π –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–∞—Ç–∞–ª–æ–≥ –Ω–∞ —Å–∞–π—Ç–µ –∏–ª–∏ –Ω–∞–∑–æ–≤–∏—Ç–µ VIN –Ω–æ–º–µ—Ä –∞–≤—Ç–æ–º–æ–±–∏–ª—è üîß';
    }
    
    if (message.includes('–≤—Ä–µ–º—è') || message.includes('—Ä–∞–±–æ—Ç–∞')) {
      return '–ú—ã —Ä–∞–±–æ—Ç–∞–µ–º –µ–∂–µ–¥–Ω–µ–≤–Ω–æ —Å 10:00 –¥–æ 20:00 üïô';
    }
    
    // –û—Ç–≤–µ—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    return '–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ! –°–µ–π—á–∞—Å –ò–ò –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –Ω–æ –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–∫–æ—Ä–æ –æ—Ç–≤–µ—Ç–∏—Ç. –ò–ª–∏ –∑–≤–æ–Ω–∏—Ç–µ +375 (29) 111-22-33 üìû';
  }

  // –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ —á–∞—Ç–∞
  if (chatForm) {
    chatForm.addEventListener('submit', async (e) => {
      e.preventDefault();

      const messageText = chatInput.value.trim();
      if (!messageText) return;

      // –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const userMessage = document.createElement('div');
      userMessage.classList.add('message', 'user-message');
      userMessage.textContent = messageText;
      chatMessages.appendChild(userMessage);

      // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –≤–Ω–∏–∑
      chatMessages.scrollTop = chatMessages.scrollHeight;

      // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
      chatInput.value = '';
      chatInput.focus();

      // –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç –ò–ò
      try {
        const aiResponse = await sendToAI(messageText);
        
        // –£–±–∏—Ä–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–µ—á–∞—Ç–∏
        hideTypingIndicator();
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç –ò–ò
        const botMessage = document.createElement('div');
        botMessage.classList.add('message', 'bot-message');
        botMessage.textContent = aiResponse;
        chatMessages.appendChild(botMessage);
        
        // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –≤–Ω–∏–∑
        chatMessages.scrollTop = chatMessages.scrollHeight;
        
      } catch (error) {
        hideTypingIndicator();
        console.error('–û—à–∏–±–∫–∞ —á–∞—Ç–∞:', error);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        const errorMessage = document.createElement('div');
        errorMessage.classList.add('message', 'bot-message');
        errorMessage.textContent = '–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É.';
        chatMessages.appendChild(errorMessage);
        chatMessages.scrollTop = chatMessages.scrollHeight;
      }
    });
  }

  // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ API
  // –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Hugging Face Inference API (–±–µ—Å–ø–ª–∞—Ç–Ω–æ)
  async function sendToHuggingFace(userMessage) {
    try {
      const response = await fetch('https://api-inference.huggingface.co/models/microsoft/DialoGPT-medium', {
        method: 'POST',
        headers: {
          'Authorization': 'Bearer YOUR_HUGGINGFACE_TOKEN',
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          inputs: userMessage,
          parameters: {
            max_length: 100,
            temperature: 0.7
          }
        })
      });

      const data = await response.json();
      return data.generated_text || '–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ —Å–º–æ–≥ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∑–∞–ø—Ä–æ—Å';
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ Hugging Face API:', error);
      return getFallbackResponse(userMessage);
    }
  }
});

 